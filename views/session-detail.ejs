<!DOCTYPE html>
<html>
<head>
    <title>Sesi√≥n <%= session.sessionId %></title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .header { display: flex; justify-content: space-between; align-items: center; }
        .status { 
            padding: 5px 10px; 
            border-radius: 15px; 
            color: white; 
            font-size: 12px; 
        }
        .status.connected { background: #28a745; }
        .status.waiting_qr { background: #ffc107; color: #000; }
        .status.initializing { background: #17a2b8; }
        .status.auth_failed { background: #dc3545; }
        .info-card { 
            background: #f8f9fa; 
            padding: 20px; 
            border-radius: 5px; 
            margin: 20px 0; 
        }
        .message { 
            padding: 10px; 
            margin: 5px 0; 
            border-radius: 5px; 
        }
        .message.sent { 
            background: #d4edda; 
            margin-left: 20px; 
        }
        .message.received { 
            background: #e2e3e5; 
            margin-right: 20px; 
        }
        .form-group { margin: 10px 0; }
        .btn { 
            padding: 8px 15px; 
            border: none; 
            border-radius: 4px; 
            cursor: pointer; 
            text-decoration: none; 
            display: inline-block;
        }
        .btn-primary { background: #007bff; color: white; }
        .btn-success { background: #28a745; color: white; }
        .btn-secondary { background: #6c757d; color: white; }
        .alert { 
            padding: 10px; 
            margin: 10px 0; 
            border-radius: 4px; 
        }
        .alert-success { background: #d4edda; color: #155724; }
        .alert-danger { background: #f8d7da; color: #721c24; }
        .qr-code { 
            background: #fff; 
            padding: 20px; 
            border: 1px solid #ddd; 
            border-radius: 5px; 
            word-break: break-all; 
            font-family: monospace; 
            font-size: 12px;
        }
    </style>
</head>
<body>
    <div class="header">
        <h2>üì± Sesi√≥n: <%= session.sessionId %></h2>
        <div>
            <span class="status <%= session.status %>"><%= session.status.toUpperCase() %></span>
            <a href="/dashboard" class="btn btn-secondary">‚Üê Volver al Dashboard</a>
        </div>
    </div>

    <!-- Mostrar mensajes de estado -->
    <% if (typeof query !== 'undefined') { %>
        <% if (query.success === 'message_sent') { %>
            <div class="alert alert-success">‚úÖ Mensaje enviado exitosamente</div>
        <% } %>
        <% if (query.error === 'not_connected') { %>
            <div class="alert alert-danger">‚ùå La sesi√≥n no est√° conectada</div>
        <% } else if (query.error === 'send_failed') { %>
            <div class="alert alert-danger">‚ùå Error al enviar el mensaje</div>
        <% } %>
    <% } %>

    <!-- Informaci√≥n de la sesi√≥n -->
    <div class="info-card">
        <h3>‚ÑπÔ∏è Informaci√≥n de la Sesi√≥n</h3>
        <p><strong>ID:</strong> <%= session.sessionId %></p>
        <p><strong>Estado:</strong> <span class="status <%= session.status %>"><%= session.status.toUpperCase() %></span></p>
        <p><strong>Creada:</strong> <%= new Date(session.createdAt).toLocaleString() %></p>
        <p><strong>√öltima actividad:</strong> <%= new Date(session.lastActivity).toLocaleString() %></p>
        <p><strong>Total mensajes:</strong> <%= messages.length %></p>
    </div>

    <!-- Mostrar QR si est√° disponible -->
    <% if (session.qrCode && session.status === 'waiting_qr') { %>
        <div class="info-card">
            <h3>üì± C√≥digo QR (Escanear con WhatsApp)</h3>
            <div class="qr-code">
                <%= session.qrCode %>
            </div>
            <p><em>Copia este c√≥digo y p√©galo en un generador de QR, luego escan√©alo con WhatsApp Web.</em></p>
            <a href="/api/qr/<%= session.sessionId %>" target="_blank" class="btn btn-primary">Ver QR en JSON</a>
        </div>
    <% } %>

    <!-- Formulario para enviar mensajes (solo si est√° conectado) -->
    <% if (session.status === 'connected') { %>
        <div class="info-card">
            <h3>üí¨ Enviar Mensaje</h3>
            <form method="POST" action="/dashboard/session/<%= session.sessionId %>/send">
                <div class="form-group">
                    <label>N√∫mero (con c√≥digo de pa√≠s, sin +):</label><br>
                    <input type="text" name="number" placeholder="Ej: 573001234567" required style="padding: 8px; width: 300px;">
                </div>
                <div class="form-group">
                    <label>Mensaje:</label><br>
                    <textarea name="message" rows="3" required style="padding: 8px; width: 400px;" placeholder="Escribe tu mensaje aqu√≠..."></textarea>
                </div>
                <button type="submit" class="btn btn-success">Enviar Mensaje</button>
            </form>
        </div>
    <% } else { %>
        <div class="info-card">
            <h3>üí¨ Enviar Mensaje</h3>
            <p style="color: #666;">Para enviar mensajes, la sesi√≥n debe estar en estado <strong>CONNECTED</strong>.</p>
            <% if (session.status === 'waiting_qr') { %>
                <p>üì± Escanea el c√≥digo QR arriba con WhatsApp Web para conectar.</p>
            <% } %>
        </div>
    <% } %>

    <!-- Historial de mensajes -->
    <div class="info-card">
        <h3>üìã Historial de Mensajes (<%= messages.length %>)</h3>
        
        <% if (messages.length === 0) { %>
            <p style="color: #666; text-align: center;">No hay mensajes a√∫n.</p>
        <% } else { %>
            <div style="max-height: 400px; overflow-y: auto; border: 1px solid #ddd; padding: 10px;">
                <% messages.slice(-20).reverse().forEach(msg => { %>
                    <div class="message <%= msg.type %>">
                        <div style="font-size: 12px; color: #666; margin-bottom: 5px;">
                            <%= new Date(msg.timestamp).toLocaleString() %>
                            <% if (msg.type === 'sent') { %>
                                ‚Üí <strong><%= msg.to %></strong>
                            <% } else { %>
                                ‚Üê <strong><%= msg.from %></strong>
                            <% } %>
                        </div>
                        <div><%= msg.body %></div>
                    </div>
                <% }); %>
            </div>
            <p style="font-size: 12px; color: #666; margin-top: 10px;">
                Mostrando los √∫ltimos 20 mensajes. Total: <%= messages.length %>
            </p>
        <% } %>
    </div>

    <!-- Acciones de la sesi√≥n -->
    <div class="info-card">
        <h3>‚öôÔ∏è Acciones</h3>
        <a href="/api/status/<%= session.sessionId %>" target="_blank" class="btn btn-primary">Ver Estado (API)</a>
        <% if (session.qrCode) { %>
            <a href="/api/qr/<%= session.sessionId %>" target="_blank" class="btn btn-success">Ver QR (API)</a>
        <% } %>
        <button onclick="confirmDelete()" class="btn" style="background: #dc3545; color: white;">Cerrar Sesi√≥n</button>
    </div>

    <script>
        function confirmDelete() {
            if (confirm('¬øEst√°s seguro de que quieres cerrar esta sesi√≥n? Se perder√°n todos los datos.')) {
                fetch('/dashboard/session/<%= session.sessionId %>', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Sesi√≥n cerrada exitosamente');
                        window.location.href = '/dashboard';
                    } else {
                        alert('Error cerrando la sesi√≥n: ' + data.error);
                    }
                })
                .catch(error => {
                    alert('Error: ' + error.message);
                });
            }
        }

        // Auto-refresh cada 15 segundos para ver cambios de estado
        setTimeout(() => {
            window.location.reload();
        }, 15000);
    </script>
</body>
</html>