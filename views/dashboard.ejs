<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - WhatsApp Manager</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
            color: #333;
        }
        
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            text-align: center;
        }
        
        .container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 0 20px;
        }
        
        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            text-align: center;
            transition: transform 0.2s;
        }
        
        .stat-card:hover {
            transform: translateY(-2px);
        }
        
        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            color: #667eea;
        }
        
        .system-info {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }
        
        .system-info h3 {
            color: #333;
            margin-bottom: 20px;
            text-align: center;
        }
        
        .system-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }
        
        .system-item {
            background: #f8f9fa;
            padding: 12px;
            border-radius: 5px;
            border-left: 4px solid #667eea;
        }
        
        .system-item strong {
            color: #333;
        }
        
        .memory-warning {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }
        
        .memory-danger {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        .alert {
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
            font-weight: 600;
        }
        
        .alert.success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .alert.error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        .form-section {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }
        
        .form-group {
            display: flex;
            gap: 15px;
            align-items: center;
        }
        
        input[type="text"] {
            flex: 1;
            padding: 12px;
            border: 2px solid #e1e5e9;
            border-radius: 5px;
            font-size: 16px;
        }
        
        input[type="text"]:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .btn {
            padding: 12px 20px;
            border: none;
            border-radius: 5px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            text-align: center;
            transition: all 0.2s;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        
        .btn-info {
            background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
            color: white;
        }
        
        .btn-success {
            background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);
            color: white;
        }
        
        .btn-danger {
            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
            color: white;
        }
        
        .btn-secondary {
            background: linear-gradient(135deg, #6c757d 0%, #545b62 100%);
            color: white;
        }
        
        .sessions-section {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .sessions-grid {
            display: grid;
            gap: 20px;
        }
        
        .session-card {
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            padding: 20px;
            background: #f8f9fa;
        }
        
        .session-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .session-id {
            font-size: 1.2rem;
            font-weight: bold;
            color: #333;
        }
        
        .session-status {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .status-connected {
            background: #d4edda;
            color: #155724;
        }
        
        .status-waiting {
            background: #fff3cd;
            color: #856404;
        }
        
        .status-disconnected {
            background: #f8d7da;
            color: #721c24;
        }
        
        .status-initializing {
            background: #d1ecf1;
            color: #0c5460;
        }
        
        .session-info {
            margin-bottom: 15px;
            font-size: 14px;
            color: #666;
        }
        
        .session-actions {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        .logout-section {
            text-align: center;
            margin-top: 30px;
        }
        
        @media (max-width: 768px) {
            .form-group {
                flex-direction: column;
            }
            
            .session-actions {
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <header class="header">
        <h1>üì± Dashboard WhatsApp Manager</h1>
        <p>Gestiona tus sesiones de WhatsApp</p>
    </header>

    <div class="container">
        <!-- Estad√≠sticas del Sistema -->
        <div class="stats">
            <div class="stat-card">
                <div class="stat-number"><%= totalSessions %></div>
                <div>Sesiones Totales</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">
                    <%= sessions.filter(s => s.status === 'connected').length %>
                </div>
                <div>Conectadas</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">
                    <%= sessions.filter(s => s.status === 'waiting_qr').length %>
                </div>
                <div>Esperando QR</div>
            </div>
            <div class="stat-card" id="memoryCard">
                <div class="stat-number" id="memoryUsage">--</div>
                <div>Memoria (MB)</div>
            </div>
            <div class="stat-card" id="uptimeCard">
                <div class="stat-number" id="uptime">--</div>
                <div>Tiempo Activo</div>
            </div>
        </div>

        <!-- Informaci√≥n detallada del sistema -->
        <div class="system-info" id="systemInfo" style="display: none;">
            <h3>üñ•Ô∏è Informaci√≥n del Sistema</h3>
            <div class="system-grid">
                <div class="system-item">
                    <strong>RAM Total:</strong> <span id="rssMemory">--</span> MB
                </div>
                <div class="system-item">
                    <strong>Heap Usado:</strong> <span id="heapUsed">--</span> MB
                </div>
                <div class="system-item">
                    <strong>Heap Total:</strong> <span id="heapTotal">--</span> MB
                </div>
                <div class="system-item">
                    <strong>Memoria Externa:</strong> <span id="external">--</span> MB
                </div>
                <div class="system-item">
                    <strong>Plataforma:</strong> <span id="platform">--</span>
                </div>
                <div class="system-item">
                    <strong>Node.js:</strong> <span id="nodeVersion">--</span>
                </div>
                <div class="system-item">
                    <strong>PID:</strong> <span id="processPid">--</span>
                </div>
                <div class="system-item">
                    <strong>√öltima actualizaci√≥n:</strong> <span id="lastSystemUpdate">--</span>
                </div>
            </div>
            <button onclick="toggleSystemInfo()" class="btn btn-secondary" style="margin-top: 15px;">
                üîÑ Actualizar Info
            </button>
        </div>

        <!-- Mensajes de √©xito/error -->
        <% if (query.success) { %>
            <div class="alert success">
                <% if (query.success === 'session_created') { %>
                    ‚úÖ Sesi√≥n creada exitosamente
                <% } else if (query.success === 'session_deleted') { %>
                    ‚úÖ Sesi√≥n eliminada exitosamente
                <% } %>
            </div>
        <% } %>

        <% if (query.error) { %>
            <div class="alert error">
                <% if (query.error === 'session_id_required') { %>
                    ‚ùå El ID de sesi√≥n es requerido
                <% } else if (query.error === 'creation_failed') { %>
                    ‚ùå Error creando la sesi√≥n
                <% } else if (query.error === 'session_not_found') { %>
                    ‚ùå Sesi√≥n no encontrada
                <% } else if (query.error === 'delete_failed') { %>
                    ‚ùå Error eliminando la sesi√≥n
                <% } %>
            </div>
        <% } %>

        <!-- Crear nueva sesi√≥n -->
        <div class="form-section">
            <h2>üÜï Crear Nueva Sesi√≥n</h2>
            <form action="/dashboard/create-session" method="POST">
                <div class="form-group">
                    <input type="text" name="sessionId" placeholder="Ingresa el ID de la sesi√≥n (ej: ses_123456)" required>
                    <button type="submit" class="btn btn-primary">Crear Sesi√≥n</button>
                </div>
            </form>
        </div>

        <!-- Lista de sesiones -->
        <div class="sessions-section">
            <h2>üìã Sesiones Activas</h2>
            
            <% if (sessions.length === 0) { %>
                <p style="text-align: center; color: #666; margin: 40px 0;">
                    No hay sesiones activas. Crea una nueva sesi√≥n arriba.
                </p>
            <% } else { %>
                <div class="sessions-grid">
                    <% sessions.forEach(session => { %>
                        <div class="session-card">
                            <div class="session-header">
                                <div class="session-id">üîó <%= session.sessionId %></div>
                                <div class="session-status status-<%= session.status.replace('_', '') %>">
                                    <%= session.status %>
                                </div>
                            </div>
                            
                            <div class="session-info">
                                <p><strong>Creada:</strong> <%= new Date(session.createdAt).toLocaleString() %></p>
                                <p><strong>√öltima actividad:</strong> <%= new Date(session.lastActivity).toLocaleString() %></p>
                                <p><strong>Mensajes:</strong> <%= session.messageCount %></p>
                            </div>
                            
                            <div class="session-actions">
                                <a href="/dashboard/session/<%= session.sessionId %>" class="btn btn-info">
                                    üëÅÔ∏è Ver Detalles
                                </a>
                                <a href="/api/qr/<%= session.sessionId %>" target="_blank" class="btn btn-success">
                                    üîë Ver Token
                                </a>
                                <button onclick="deleteSession('<%= session.sessionId %>')" class="btn btn-danger">
                                    üóëÔ∏è Eliminar Sesi√≥n
                                </button>
                            </div>
                        </div>
                    <% }) %>
                </div>
            <% } %>
        </div>

        <!-- Logout -->
        <div class="logout-section">
            <a href="/logout" class="btn btn-secondary">üö™ Cerrar Sesi√≥n</a>
        </div>
    </div>

    <script>
        let systemInfoVisible = false;
        
        function deleteSession(sessionId) {
            if (!confirm(`¬øEst√°s seguro de que quieres eliminar la sesi√≥n "${sessionId}"?\n\nEsta acci√≥n no se puede deshacer.`)) {
                return;
            }
            
            // Mostrar indicador de carga
            const button = event.target;
            const originalText = button.innerHTML;
            button.innerHTML = '‚è≥ Eliminando...';
            button.disabled = true;
            
            fetch(`/dashboard/session/${sessionId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Recargar la p√°gina para mostrar los cambios
                    window.location.href = '/dashboard?success=session_deleted';
                } else {
                    alert('Error eliminando sesi√≥n: ' + (data.error || 'Error desconocido'));
                    button.innerHTML = originalText;
                    button.disabled = false;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error de conexi√≥n eliminando sesi√≥n');
                button.innerHTML = originalText;
                button.disabled = false;
            });
        }
        
        async function loadSystemInfo() {
            try {
                const response = await fetch('/api/system-info');
                const result = await response.json();
                
                if (result.success) {
                    const data = result.data;
                    
                    // Actualizar tarjetas principales
                    document.getElementById('memoryUsage').textContent = data.memory.rss;
                    document.getElementById('uptime').textContent = data.process.uptime;
                    
                    // Actualizar informaci√≥n detallada
                    document.getElementById('rssMemory').textContent = data.memory.rss;
                    document.getElementById('heapUsed').textContent = data.memory.heapUsed;
                    document.getElementById('heapTotal').textContent = data.memory.heapTotal;
                    document.getElementById('external').textContent = data.memory.external;
                    document.getElementById('platform').textContent = `${data.process.platform} ${data.process.arch}`;
                    document.getElementById('nodeVersion').textContent = data.process.version;
                    document.getElementById('processPid').textContent = data.process.pid;
                    document.getElementById('lastSystemUpdate').textContent = new Date(data.timestamp).toLocaleString();
                    
                    // Cambiar color seg√∫n uso de memoria
                    const memoryCard = document.getElementById('memoryCard');
                    const memoryMB = parseFloat(data.memory.rss);
                    
                    memoryCard.className = 'stat-card';
                    if (memoryMB > 400) {
                        memoryCard.classList.add('memory-danger');
                    } else if (memoryMB > 200) {
                        memoryCard.classList.add('memory-warning');
                    }
                    
                } else {
                    console.error('Error obteniendo info del sistema:', result);
                }
            } catch (error) {
                console.error('Error cargando info del sistema:', error);
                document.getElementById('memoryUsage').textContent = 'Error';
                document.getElementById('uptime').textContent = 'Error';
            }
        }
        
        function toggleSystemInfo() {
            const systemInfo = document.getElementById('systemInfo');
            systemInfoVisible = !systemInfoVisible;
            
            if (systemInfoVisible) {
                systemInfo.style.display = 'block';
                loadSystemInfo();
            } else {
                systemInfo.style.display = 'none';
            }
        }
        
        // Cargar informaci√≥n del sistema al cargar la p√°gina
        window.addEventListener('load', function() {
            loadSystemInfo();
            
            // Auto-actualizar cada 30 segundos
            setInterval(loadSystemInfo, 30000);
        });
        
        // Hacer las tarjetas de memoria y uptime clickeables
        document.addEventListener('DOMContentLoaded', function() {
            const memoryCard = document.getElementById('memoryCard');
            const uptimeCard = document.getElementById('uptimeCard');
            
            if (memoryCard) {
                memoryCard.style.cursor = 'pointer';
                memoryCard.addEventListener('click', toggleSystemInfo);
            }
            
            if (uptimeCard) {
                uptimeCard.style.cursor = 'pointer';
                uptimeCard.addEventListener('click', toggleSystemInfo);
            }
        });
    </script>
</body>
</html>